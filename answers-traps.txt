Q: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A: a0–a7. a2.


Q: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may 
inline functions.)
A: g(x) 被内联到 f(x) 中，然后 f(x) 又被进一步内联到 main() 中。所以看到的不是函数跳转，而是优化后的内联函数。


Q: At what address is the function printf located?
A: 0x638.


Q: What value is in the register ra just after the jalr to printf in main?
A: 0x38(ra=pc+4).
jalr 指令会将 pc + 4 赋给当前寄存器，刚好是其下一条指令的地址。


Q:
Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
A: He110 World.

The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would 
you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A: 0x726c6400, no change for 57616.
